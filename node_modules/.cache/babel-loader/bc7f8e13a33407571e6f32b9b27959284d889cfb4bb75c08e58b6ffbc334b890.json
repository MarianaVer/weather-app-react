{"ast":null,"code":"var _jsxFileName = \"/Users/marianakoval/JS/SheCodes/weather-app-react2/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      wind: response.data.wind.speed,\n      city: response.data.name\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n  function search() {\n    let apiKey = \"7d478f69e1b2f5d563653f13f5f91d76\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city..\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading..\";\n  }\n}\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","WeatherInfo","axios","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","temperature","data","main","temp","humidity","date","Date","dt","description","weather","iconUrl","wind","speed","name","handleSubmit","event","preventDefault","search","handleCityChange","target","value","apiKey","apiUrl","get","then"],"sources":["/Users/marianakoval/JS/SheCodes/weather-app-react2/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      iconUrl: \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    let apiKey = \"7d478f69e1b2f5d563653f13f5f91d76\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city..\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n        <WeatherInfo data={weatherData} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading..\";\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC;AAEvB,eAAe,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,KAAK,EAAE;EAAM,CAAC,CAAC;EAChE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAACM,WAAW,CAAC;EACnD,SAASC,cAAc,CAACC,QAAQ,EAAE;IAChCN,cAAc,CAAC;MACbC,KAAK,EAAE,IAAI;MACXM,WAAW,EAAED,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACC,IAAI;MACpCC,QAAQ,EAAEL,QAAQ,CAACE,IAAI,CAACC,IAAI,CAACE,QAAQ;MACrCC,IAAI,EAAE,IAAIC,IAAI,CAACP,QAAQ,CAACE,IAAI,CAACM,EAAE,GAAG,IAAI,CAAC;MACvCC,WAAW,EAAET,QAAQ,CAACE,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACD,WAAW;MACjDE,OAAO,EAAE,6DAA6D;MACtEC,IAAI,EAAEZ,QAAQ,CAACE,IAAI,CAACU,IAAI,CAACC,KAAK;MAC9BjB,IAAI,EAAEI,QAAQ,CAACE,IAAI,CAACY;IACtB,CAAC,CAAC;EACJ;EAEA,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBC,MAAM,EAAE;EACV;EAEA,SAASC,gBAAgB,CAACH,KAAK,EAAE;IAC/BnB,OAAO,CAACmB,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;EAC7B;EAEA,SAASH,MAAM,GAAG;IAChB,IAAII,MAAM,GAAG,kCAAkC;IAC/C,IAAIC,MAAM,GAAI,qDAAoD3B,IAAK,UAAS0B,MAAO,eAAc;IACrGhC,KAAK,CAACkC,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAAC1B,cAAc,CAAC;EACxC;EAEA,IAAIN,WAAW,CAACE,KAAK,EAAE;IACrB,oBACE;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAM,QAAQ,EAAEoB,YAAa;QAAA,uBAC3B;UAAK,SAAS,EAAC,KAAK;UAAA,wBAClB;YAAK,SAAS,EAAC,OAAO;YAAA,uBACpB;cACE,IAAI,EAAC,QAAQ;cACb,WAAW,EAAC,gBAAgB;cAC5B,SAAS,EAAC,cAAc;cACxB,SAAS,EAAC,IAAI;cACd,QAAQ,EAAEI;YAAiB;cAAA;cAAA;cAAA;YAAA;UAC3B;YAAA;YAAA;YAAA;UAAA,QACE,eACN;YAAK,SAAS,EAAC,OAAO;YAAA,uBACpB;cACE,IAAI,EAAC,QAAQ;cACb,KAAK,EAAC,QAAQ;cACd,SAAS,EAAC;YAAuB;cAAA;cAAA;cAAA;YAAA;UACjC;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACD,eACP,QAAC,WAAW;QAAC,IAAI,EAAE1B;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAEV,CAAC,MAAM;IACLyB,MAAM,EAAE;IACR,OAAO,WAAW;EACpB;AACF;AAAC,GA7DuB3B,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}